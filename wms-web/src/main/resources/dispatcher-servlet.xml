<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:wms-${mode}.properties</value>
				<!--<value>classpath:wms-online.properties</value>-->
			</list>
		</property>
	</bean>

	<!-- 启动Springmvc注解驱动 -->
	<mvc:annotation-driven/>
    <!-- 返回json 方法一 需要导入 fastjson.jar包 -->  
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示(好像未必) -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
	
	<context:component-scan base-package="com.home.wms.web" />
	
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/flatpoint/" mapping="/flatpoint/**" />
	<mvc:resources location="/files/" mapping="/files/**" />
	<!--add other resource here  -->
	<!-- <mvc:resources location="/media/css/" mapping="/media/css/**" /> -->
	
	<!-- xml视图，XStreamMarshaller，可以转换任何形式的java对象 -->
    <bean name="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView">
        <property name="marshaller">
            <bean class="org.springframework.oxm.xstream.XStreamMarshaller">  
                <!--  为了初始化XStreamMarshaller，这个类会把我们接口中得到结果以XML文档形式展现出来 -->
                <property name="autodetectAnnotations" value="true"/>
            </bean>  
        </property>
    </bean>
	

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
	   p:viewClass="org.springframework.web.servlet.view.JstlView"
	   p:prefix="/WEB-INF/views/"
	   p:suffix=".jsp"/>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器，顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/checkCode"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/flatpoint/**"/>
			<bean class="com.home.wms.web.interceptor.SessionInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	   
</beans>
