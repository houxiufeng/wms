<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:task="http://www.springframework.org/schema/task"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
      http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.0.xsd"
        default-autowire="no" default-lazy-init="true">
        
    <context:component-scan base-package="com.home.wms.service"/>
    
    <!-- 启用@Aspect支持 -->
    <!--<aop:aspectj-autoproxy/>-->
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"></aop:aspectj-autoproxy>
    
    <!-- 等同于下面注掉部分  多个配置文件可用,号分隔 -->
    <!-- <context:property-placeholder location="classpath:init.properties"/> -->
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:wms-${mode}.properties</value>
                <!--<value>classpath:wms-online.properties</value>-->
            </list>
        </property>
    </bean>
    
   <!-- 定时器开关  开始 -->
     <task:annotation-driven />
   <!-- 定时器开关  结束 -->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 permissionuser、password -->
      <property name="driverClassName" value="${driverClassName}" />
      <property name="url" value="${jdbcUrl}" />
      <property name="username" value="${username}" />
      <property name="password" value="${password}" />

      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="${initialSize}" />
      <property name="minIdle" value="${minIdle}" /> 
      <property name="maxActive" value="${maxActive}" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="${maxWait}" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />

      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat" /> 
    </bean>
    	

    <bean id="mappingHandler" class="com.home.wms.utils.AppMappingHandler"></bean>

    <bean id="jdbcTemplateEngineConfig" class="com.ktanx.jdbc.springjdbc.config.JdbcTemplateEngineConfigImpl">
        <property name="defaultMappingHandler" ref="mappingHandler"/>
    </bean>
    <bean id="jdbcDao" class="com.ktanx.jdbc.springjdbc.persist.JdbcTemplateDaoImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="jdbcEngineConfig" ref="jdbcTemplateEngineConfig"/>
    </bean>
    
    <!--&lt;!&ndash; restTemplate 注册 &ndash;&gt;-->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
    
    <!-- 事物控制 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    	
    <!--  这里申明的id必须为multipartResolver  -->
	<bean id="multipartResolver"
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="5000000"/>
	</bean>

</beans>